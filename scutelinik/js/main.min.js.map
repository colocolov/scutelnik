{"version":3,"sources":["accordeon.js","dinam-adap.js","form.js","modal.js","nav.js","remove.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrlLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA","file":"main.min.js","sourcesContent":["// accordeon\nconst servicesBtn = document.querySelector(\".services__btn\");\nconst servicesAll = document.querySelector(\".services__all\");\nconst works = document.querySelector(\".works\");\n// const menuLink = document.querySelector(\".menu__item\");\nif (servicesBtn) {\n  servicesBtn.addEventListener(\"click\", function (e) {\n    // document.body.classList.toggle(\"_lock\");\n    servicesBtn.classList.toggle(\"active\");\n    servicesAll.classList.toggle(\"active\");\n    works.classList.toggle(\"active\");\n\n    // смена текста на кнопке \"Все услуги\" при клике\n    if (servicesBtn.classList.contains(\"active\")) {\n      // console.log(\"yes\");\n      servicesBtn.textContent = \"Закрыть\";\n    } else {\n      servicesBtn.textContent = \"Все услуги\";\n    }\n  });\n}\n","// Dynamic Adapt v.1\r\n// HTML data-da=\"where(uniq class name),when(breakpoint),position(digi)\"\r\n// e.x. data-da=\".item,992,2\"\r\n// Andrikanych Yevhen 2020\r\n// https://www.youtube.com/c/freelancerlifestyle\r\n\r\n\"use strict\";\r\n\r\nfunction DynamicAdapt(type) {\r\n  this.type = type;\r\n}\r\n\r\nDynamicAdapt.prototype.init = function () {\r\n  const _this = this;\r\n  // массив объектов\r\n  this.оbjects = [];\r\n  this.daClassname = \"_dynamic_adapt_\";\r\n  // массив DOM-элементов\r\n  this.nodes = document.querySelectorAll(\"[data-da]\");\r\n\r\n  // наполнение оbjects объктами\r\n  for (let i = 0; i < this.nodes.length; i++) {\r\n    const node = this.nodes[i];\r\n    const data = node.dataset.da.trim();\r\n    const dataArray = data.split(\",\");\r\n    const оbject = {};\r\n    оbject.element = node;\r\n    оbject.parent = node.parentNode;\r\n    оbject.destination = document.querySelector(dataArray[0].trim());\r\n    оbject.breakpoint = dataArray[1] ? dataArray[1].trim() : \"767\";\r\n    оbject.place = dataArray[2] ? dataArray[2].trim() : \"last\";\r\n    оbject.index = this.indexInParent(оbject.parent, оbject.element);\r\n    this.оbjects.push(оbject);\r\n  }\r\n\r\n  this.arraySort(this.оbjects);\r\n\r\n  // массив уникальных медиа-запросов\r\n  this.mediaQueries = Array.prototype.map.call(\r\n    this.оbjects,\r\n    function (item) {\r\n      return (\r\n        \"(\" +\r\n        this.type +\r\n        \"-width: \" +\r\n        item.breakpoint +\r\n        \"px),\" +\r\n        item.breakpoint\r\n      );\r\n    },\r\n    this\r\n  );\r\n  this.mediaQueries = Array.prototype.filter.call(\r\n    this.mediaQueries,\r\n    function (item, index, self) {\r\n      return Array.prototype.indexOf.call(self, item) === index;\r\n    }\r\n  );\r\n\r\n  // навешивание слушателя на медиа-запрос\r\n  // и вызов обработчика при первом запуске\r\n  for (let i = 0; i < this.mediaQueries.length; i++) {\r\n    const media = this.mediaQueries[i];\r\n    const mediaSplit = String.prototype.split.call(media, \",\");\r\n    const matchMedia = window.matchMedia(mediaSplit[0]);\r\n    const mediaBreakpoint = mediaSplit[1];\r\n\r\n    // массив объектов с подходящим брейкпоинтом\r\n    const оbjectsFilter = Array.prototype.filter.call(\r\n      this.оbjects,\r\n      function (item) {\r\n        return item.breakpoint === mediaBreakpoint;\r\n      }\r\n    );\r\n    matchMedia.addListener(function () {\r\n      _this.mediaHandler(matchMedia, оbjectsFilter);\r\n    });\r\n    this.mediaHandler(matchMedia, оbjectsFilter);\r\n  }\r\n};\r\n\r\nDynamicAdapt.prototype.mediaHandler = function (matchMedia, оbjects) {\r\n  if (matchMedia.matches) {\r\n    for (let i = 0; i < оbjects.length; i++) {\r\n      const оbject = оbjects[i];\r\n      оbject.index = this.indexInParent(оbject.parent, оbject.element);\r\n      this.moveTo(оbject.place, оbject.element, оbject.destination);\r\n    }\r\n  } else {\r\n    for (let i = 0; i < оbjects.length; i++) {\r\n      const оbject = оbjects[i];\r\n      if (оbject.element.classList.contains(this.daClassname)) {\r\n        this.moveBack(оbject.parent, оbject.element, оbject.index);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// Функция перемещения\r\nDynamicAdapt.prototype.moveTo = function (place, element, destination) {\r\n  element.classList.add(this.daClassname);\r\n  if (place === \"last\" || place >= destination.children.length) {\r\n    destination.insertAdjacentElement(\"beforeend\", element);\r\n    return;\r\n  }\r\n  if (place === \"first\") {\r\n    destination.insertAdjacentElement(\"afterbegin\", element);\r\n    return;\r\n  }\r\n  destination.children[place].insertAdjacentElement(\"beforebegin\", element);\r\n};\r\n\r\n// Функция возврата\r\nDynamicAdapt.prototype.moveBack = function (parent, element, index) {\r\n  element.classList.remove(this.daClassname);\r\n  if (parent.children[index] !== undefined) {\r\n    parent.children[index].insertAdjacentElement(\"beforebegin\", element);\r\n  } else {\r\n    parent.insertAdjacentElement(\"beforeend\", element);\r\n  }\r\n};\r\n\r\n// Функция получения индекса внутри родителя\r\nDynamicAdapt.prototype.indexInParent = function (parent, element) {\r\n  const array = Array.prototype.slice.call(parent.children);\r\n  return Array.prototype.indexOf.call(array, element);\r\n};\r\n\r\n// Функция сортировки массива по breakpoint и place\r\n// по возрастанию для this.type = min\r\n// по убыванию для this.type = max\r\nDynamicAdapt.prototype.arraySort = function (arr) {\r\n  if (this.type === \"min\") {\r\n    Array.prototype.sort.call(arr, function (a, b) {\r\n      if (a.breakpoint === b.breakpoint) {\r\n        if (a.place === b.place) {\r\n          return 0;\r\n        }\r\n\r\n        if (a.place === \"first\" || b.place === \"last\") {\r\n          return -1;\r\n        }\r\n\r\n        if (a.place === \"last\" || b.place === \"first\") {\r\n          return 1;\r\n        }\r\n\r\n        return a.place - b.place;\r\n      }\r\n\r\n      return a.breakpoint - b.breakpoint;\r\n    });\r\n  } else {\r\n    Array.prototype.sort.call(arr, function (a, b) {\r\n      if (a.breakpoint === b.breakpoint) {\r\n        if (a.place === b.place) {\r\n          return 0;\r\n        }\r\n\r\n        if (a.place === \"first\" || b.place === \"last\") {\r\n          return 1;\r\n        }\r\n\r\n        if (a.place === \"last\" || b.place === \"first\") {\r\n          return -1;\r\n        }\r\n\r\n        return b.place - a.place;\r\n      }\r\n\r\n      return b.breakpoint - a.breakpoint;\r\n    });\r\n    return;\r\n  }\r\n};\r\n\r\nconst da = new DynamicAdapt(\"max\");\r\nda.init();\r\n","// форма отправки оповещения в телеграм\nconst form = document.querySelector(\".footer__form\");\n\nconst telSelector = form.querySelector('input[type=\"tel\"]');\nconst inputMask = new Inputmask(\"+373 (99) 999-999\");\ninputMask.mask(telSelector);\n\n// const validation = new JustValidate(\"#fform\");\nconst validation = new JustValidate(\"#fform\");\n\nvalidation\n  .addField(\"#name\", [\n    {\n      rule: \"minLength\",\n      value: 3,\n      errorMessage: \"Минимальная длина имени: 3 буквы\",\n    },\n    {\n      rule: \"maxLength\",\n      value: 30,\n      errorMessage: \"Имя слишком длинное!\",\n    },\n    {\n      rule: \"required\",\n      value: true,\n      errorMessage: \"Введите имя!\",\n    },\n  ])\n  .addField(\"#telephone\", [\n    {\n      rule: \"required\",\n      value: true,\n      errorMessage: \"Введите телефон!\",\n    },\n    {\n      rule: \"function\",\n      validator: function () {\n        const phone = telSelector.inputmask.unmaskedvalue();\n        return phone.length === 8;\n      },\n      errorMessage: \"Введите корректный номер телефона!\",\n    },\n  ])\n  .onSuccess((e) => {\n    // сама форма обраюотки\n\n    const sendForm = (data) => {\n      return fetch(\"send.php\", {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n          // \"Access-Control-Allow-Origin\": \"*\",\n          // \"Access-Control-Allow-Credentials\": true,\n        },\n      }).then((res) => res.json());\n    };\n\n    // form.addEventListener(\"submit\", (e) => {\n    //   e.preventDefault();\n\n    const dataForm = new FormData(e.target);\n    const user = {};\n\n    dataForm.forEach((val, key) => {\n      user[key] = val;\n      // console.log((user[key] = val));\n    });\n\n    sendForm(user).then((data) => {\n      // console.log(\"Успешно!\");\n      // modal.classList.add(\"active\");\n      // time();\n    });\n\n    e.target.reset();\n\n    function time() {\n      document.querySelector('div[class=\"modal\"]').classList.add(\"active\");\n      document.body.classList.add(\"_lock\");\n    }\n    setTimeout(time, 500);\n\n    // });\n    // конец формы\n  });\n\n//*----\n","const modal = document.querySelector(\".modal\");\r\nconst modalBtn = document.querySelector(\".modal__btn\");\r\n\r\n// body.classList.add(\"lock\");\r\n\r\nmodal.addEventListener(\"click\", (e) => {\r\n  const isModal = e.target.closest(\".modal__inner\");\r\n\r\n  if (!isModal) {\r\n    modal.classList.remove(\"active\");\r\n    document.body.classList.remove(\"_lock\");\r\n  }\r\n});\r\n\r\nmodalBtn.addEventListener(\"click\", (e) => {\r\n  modal.classList.remove(\"active\");\r\n  document.body.classList.remove(\"_lock\");\r\n});\r\n","// мобильное меню\r\n\r\n// меню бургер\r\nconst iconMenu = document.querySelector(\".nav__icon\");\r\nconst menuBody = document.querySelector(\".nav__body\");\r\nconst menuLink = document.querySelectorAll(\".nav__item\");\r\n\r\nif (iconMenu) {\r\n  iconMenu.addEventListener(\"click\", function (e) {\r\n    document.body.classList.toggle(\"_lock\");\r\n    iconMenu.classList.toggle(\"_active\");\r\n    menuBody.classList.toggle(\"_active\");\r\n  });\r\n}\r\n\r\n// закрытие при клике\r\nmenuLink.forEach((item, i) => {\r\n  item.addEventListener(\"click\", () => {\r\n    document.body.classList.remove(\"_lock\");\r\n    iconMenu.classList.remove(\"_active\");\r\n    menuBody.classList.remove(\"_active\");\r\n  });\r\n});\r\n","// $(window).on(\"load resize\", function () {\r\n//   if ($(window).width() < 768) {\r\n//     $(\"#cut\").insertAfter(\"#insert\");\r\n//   }\r\n// });\r\n"]}