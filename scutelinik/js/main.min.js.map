{"version":3,"sources":["accordeon.js","dinam-adap.js","form.js","modal.js","nav.js","remove.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrlLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA","file":"main.min.js","sourcesContent":["// accordeon\r\nconst servicesBtn = document.querySelector(\".services__btn\");\r\nconst servicesAll = document.querySelector(\".services__all\");\r\nconst works = document.querySelector(\".works\");\r\n// const menuLink = document.querySelector(\".menu__item\");\r\nif (servicesBtn) {\r\n  servicesBtn.addEventListener(\"click\", function (e) {\r\n    // document.body.classList.toggle(\"_lock\");\r\n    servicesBtn.classList.toggle(\"active\");\r\n    servicesAll.classList.toggle(\"active\");\r\n    works.classList.toggle(\"active\");\r\n\r\n    // смена текста на кнопке \"Все услуги\" при клике\r\n    if (servicesBtn.classList.contains(\"active\")) {\r\n      // console.log(\"yes\");\r\n      servicesBtn.textContent = \"Закрыть\";\r\n    } else {\r\n      servicesBtn.textContent = \"Все услуги\";\r\n    }\r\n  });\r\n}\r\n","// Dynamic Adapt v.1\n// HTML data-da=\"where(uniq class name),when(breakpoint),position(digi)\"\n// e.x. data-da=\".item,992,2\"\n// Andrikanych Yevhen 2020\n// https://www.youtube.com/c/freelancerlifestyle\n\n\"use strict\";\n\nfunction DynamicAdapt(type) {\n  this.type = type;\n}\n\nDynamicAdapt.prototype.init = function () {\n  const _this = this;\n  // массив объектов\n  this.оbjects = [];\n  this.daClassname = \"_dynamic_adapt_\";\n  // массив DOM-элементов\n  this.nodes = document.querySelectorAll(\"[data-da]\");\n\n  // наполнение оbjects объктами\n  for (let i = 0; i < this.nodes.length; i++) {\n    const node = this.nodes[i];\n    const data = node.dataset.da.trim();\n    const dataArray = data.split(\",\");\n    const оbject = {};\n    оbject.element = node;\n    оbject.parent = node.parentNode;\n    оbject.destination = document.querySelector(dataArray[0].trim());\n    оbject.breakpoint = dataArray[1] ? dataArray[1].trim() : \"767\";\n    оbject.place = dataArray[2] ? dataArray[2].trim() : \"last\";\n    оbject.index = this.indexInParent(оbject.parent, оbject.element);\n    this.оbjects.push(оbject);\n  }\n\n  this.arraySort(this.оbjects);\n\n  // массив уникальных медиа-запросов\n  this.mediaQueries = Array.prototype.map.call(\n    this.оbjects,\n    function (item) {\n      return (\n        \"(\" +\n        this.type +\n        \"-width: \" +\n        item.breakpoint +\n        \"px),\" +\n        item.breakpoint\n      );\n    },\n    this\n  );\n  this.mediaQueries = Array.prototype.filter.call(\n    this.mediaQueries,\n    function (item, index, self) {\n      return Array.prototype.indexOf.call(self, item) === index;\n    }\n  );\n\n  // навешивание слушателя на медиа-запрос\n  // и вызов обработчика при первом запуске\n  for (let i = 0; i < this.mediaQueries.length; i++) {\n    const media = this.mediaQueries[i];\n    const mediaSplit = String.prototype.split.call(media, \",\");\n    const matchMedia = window.matchMedia(mediaSplit[0]);\n    const mediaBreakpoint = mediaSplit[1];\n\n    // массив объектов с подходящим брейкпоинтом\n    const оbjectsFilter = Array.prototype.filter.call(\n      this.оbjects,\n      function (item) {\n        return item.breakpoint === mediaBreakpoint;\n      }\n    );\n    matchMedia.addListener(function () {\n      _this.mediaHandler(matchMedia, оbjectsFilter);\n    });\n    this.mediaHandler(matchMedia, оbjectsFilter);\n  }\n};\n\nDynamicAdapt.prototype.mediaHandler = function (matchMedia, оbjects) {\n  if (matchMedia.matches) {\n    for (let i = 0; i < оbjects.length; i++) {\n      const оbject = оbjects[i];\n      оbject.index = this.indexInParent(оbject.parent, оbject.element);\n      this.moveTo(оbject.place, оbject.element, оbject.destination);\n    }\n  } else {\n    for (let i = 0; i < оbjects.length; i++) {\n      const оbject = оbjects[i];\n      if (оbject.element.classList.contains(this.daClassname)) {\n        this.moveBack(оbject.parent, оbject.element, оbject.index);\n      }\n    }\n  }\n};\n\n// Функция перемещения\nDynamicAdapt.prototype.moveTo = function (place, element, destination) {\n  element.classList.add(this.daClassname);\n  if (place === \"last\" || place >= destination.children.length) {\n    destination.insertAdjacentElement(\"beforeend\", element);\n    return;\n  }\n  if (place === \"first\") {\n    destination.insertAdjacentElement(\"afterbegin\", element);\n    return;\n  }\n  destination.children[place].insertAdjacentElement(\"beforebegin\", element);\n};\n\n// Функция возврата\nDynamicAdapt.prototype.moveBack = function (parent, element, index) {\n  element.classList.remove(this.daClassname);\n  if (parent.children[index] !== undefined) {\n    parent.children[index].insertAdjacentElement(\"beforebegin\", element);\n  } else {\n    parent.insertAdjacentElement(\"beforeend\", element);\n  }\n};\n\n// Функция получения индекса внутри родителя\nDynamicAdapt.prototype.indexInParent = function (parent, element) {\n  const array = Array.prototype.slice.call(parent.children);\n  return Array.prototype.indexOf.call(array, element);\n};\n\n// Функция сортировки массива по breakpoint и place\n// по возрастанию для this.type = min\n// по убыванию для this.type = max\nDynamicAdapt.prototype.arraySort = function (arr) {\n  if (this.type === \"min\") {\n    Array.prototype.sort.call(arr, function (a, b) {\n      if (a.breakpoint === b.breakpoint) {\n        if (a.place === b.place) {\n          return 0;\n        }\n\n        if (a.place === \"first\" || b.place === \"last\") {\n          return -1;\n        }\n\n        if (a.place === \"last\" || b.place === \"first\") {\n          return 1;\n        }\n\n        return a.place - b.place;\n      }\n\n      return a.breakpoint - b.breakpoint;\n    });\n  } else {\n    Array.prototype.sort.call(arr, function (a, b) {\n      if (a.breakpoint === b.breakpoint) {\n        if (a.place === b.place) {\n          return 0;\n        }\n\n        if (a.place === \"first\" || b.place === \"last\") {\n          return 1;\n        }\n\n        if (a.place === \"last\" || b.place === \"first\") {\n          return -1;\n        }\n\n        return b.place - a.place;\n      }\n\n      return b.breakpoint - a.breakpoint;\n    });\n    return;\n  }\n};\n\nconst da = new DynamicAdapt(\"max\");\nda.init();\n","// форма отправки оповещения в телеграм\r\nconst form = document.querySelector(\".footer__form\");\r\n\r\nconst telSelector = form.querySelector('input[type=\"tel\"]');\r\nconst inputMask = new Inputmask(\"+373 (99) 999-999\");\r\ninputMask.mask(telSelector);\r\n\r\n// const validation = new JustValidate(\"#fform\");\r\nconst validation = new JustValidate(\"#fform\");\r\n\r\nvalidation\r\n  .addField(\"#name\", [\r\n    {\r\n      rule: \"minLength\",\r\n      value: 3,\r\n      errorMessage: \"Минимальная длина имени: 3 буквы\",\r\n    },\r\n    {\r\n      rule: \"maxLength\",\r\n      value: 30,\r\n      errorMessage: \"Имя слишком длинное!\",\r\n    },\r\n    {\r\n      rule: \"required\",\r\n      value: true,\r\n      errorMessage: \"Введите имя!\",\r\n    },\r\n  ])\r\n  .addField(\"#telephone\", [\r\n    {\r\n      rule: \"required\",\r\n      value: true,\r\n      errorMessage: \"Введите телефон!\",\r\n    },\r\n    {\r\n      rule: \"function\",\r\n      validator: function () {\r\n        const phone = telSelector.inputmask.unmaskedvalue();\r\n        return phone.length === 8;\r\n      },\r\n      errorMessage: \"Введите корректный номер телефона!\",\r\n    },\r\n  ])\r\n  .onSuccess((e) => {\r\n    // сама форма обраюотки\r\n\r\n    const sendForm = (data) => {\r\n      return fetch(\"send.php\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n          // \"Access-Control-Allow-Origin\": \"*\",\r\n          // \"Access-Control-Allow-Credentials\": true,\r\n        },\r\n      }).then((res) => res.json());\r\n    };\r\n\r\n    // form.addEventListener(\"submit\", (e) => {\r\n    //   e.preventDefault();\r\n\r\n    const dataForm = new FormData(e.target);\r\n    const user = {};\r\n\r\n    dataForm.forEach((val, key) => {\r\n      user[key] = val;\r\n      // console.log((user[key] = val));\r\n    });\r\n\r\n    sendForm(user).then((data) => {\r\n      // console.log(\"Успешно!\");\r\n      // modal.classList.add(\"active\");\r\n      // time();\r\n    });\r\n\r\n    e.target.reset();\r\n\r\n    function time() {\r\n      document.querySelector('div[class=\"modal\"]').classList.add(\"active\");\r\n      document.body.classList.add(\"_lock\");\r\n    }\r\n    setTimeout(time, 500);\r\n\r\n    // });\r\n    // конец формы\r\n  });\r\n\r\n//*----\r\n","const modal = document.querySelector(\".modal\");\r\nconst modalBtn = document.querySelector(\".modal__btn\");\r\n\r\n// body.classList.add(\"lock\");\r\n\r\nmodal.addEventListener(\"click\", (e) => {\r\n  const isModal = e.target.closest(\".modal__inner\");\r\n\r\n  if (!isModal) {\r\n    modal.classList.remove(\"active\");\r\n    document.body.classList.remove(\"_lock\");\r\n  }\r\n});\r\n\r\nmodalBtn.addEventListener(\"click\", (e) => {\r\n  modal.classList.remove(\"active\");\r\n  document.body.classList.remove(\"_lock\");\r\n});\r\n","// мобильное меню\n\n// меню бургер\nconst iconMenu = document.querySelector(\".nav__icon\");\nconst menuBody = document.querySelector(\".nav__body\");\nconst menuLink = document.querySelectorAll(\".nav__item\");\n\nif (iconMenu) {\n  iconMenu.addEventListener(\"click\", function (e) {\n    document.body.classList.toggle(\"_lock\");\n    iconMenu.classList.toggle(\"_active\");\n    menuBody.classList.toggle(\"_active\");\n  });\n}\n\n// закрытие при клике\nmenuLink.forEach((item, i) => {\n  item.addEventListener(\"click\", () => {\n    document.body.classList.remove(\"_lock\");\n    iconMenu.classList.remove(\"_active\");\n    menuBody.classList.remove(\"_active\");\n  });\n});\n","// $(window).on(\"load resize\", function () {\n//   if ($(window).width() < 768) {\n//     $(\"#cut\").insertAfter(\"#insert\");\n//   }\n// });\n"]}