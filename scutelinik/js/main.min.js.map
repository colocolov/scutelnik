{"version":3,"sources":["accordeon.js","bodal.js","form.js","nav-dinam-adap.js","nav.js","remove.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxEA;AACA;AACA;AACA;AACA;AACA","file":"main.min.js","sourcesContent":["// accordeon\r\nconst servicesBtn = document.querySelector(\".services__btn\");\r\nconst servicesAll = document.querySelector(\".services__all\");\r\nconst works = document.querySelector(\".works\");\r\n// const menuLink = document.querySelector(\".menu__item\");\r\nif (servicesBtn) {\r\n  servicesBtn.addEventListener(\"click\", function (e) {\r\n    // document.body.classList.toggle(\"_lock\");\r\n    servicesBtn.classList.toggle(\"active\");\r\n    servicesAll.classList.toggle(\"active\");\r\n    works.classList.toggle(\"active\");\r\n\r\n    // смена текста на кнопке \"Все услуги\" при клике\r\n    if (servicesBtn.classList.contains(\"active\")) {\r\n      // console.log(\"yes\");\r\n      servicesBtn.textContent = \"Закрыть\";\r\n    } else {\r\n      servicesBtn.textContent = \"Все услуги\";\r\n    }\r\n  });\r\n}\r\n","const modal = document.querySelector(\".modal\");\r\nconst modalBtn = document.querySelector(\".modal__btn\");\r\n\r\n// body.classList.add(\"lock\");\r\n\r\nmodal.addEventListener(\"click\", (e) => {\r\n  const isModal = e.target.closest(\".modal__inner\");\r\n\r\n  if (!isModal) {\r\n    modal.classList.remove(\"active\");\r\n    document.body.classList.remove(\"_lock\");\r\n  }\r\n});\r\n\r\nmodalBtn.addEventListener(\"click\", (e) => {\r\n  modal.classList.remove(\"active\");\r\n  document.body.classList.remove(\"_lock\");\r\n});\r\n","// форма отправки оповещения в телеграм\r\nconst form = document.querySelector(\".footer__form\");\r\n\r\nconst telSelector = form.querySelector('input[type=\"tel\"]');\r\nconst inputMask = new Inputmask(\"+373 (99) 999-999\");\r\ninputMask.mask(telSelector);\r\n\r\n// const validation = new JustValidate(\"#fform\");\r\nconst validation = new JustValidate(\"#fform\");\r\n\r\nvalidation\r\n  .addField(\"#name\", [\r\n    {\r\n      rule: \"minLength\",\r\n      value: 3,\r\n      errorMessage: \"Минимальная длина имени: 3 буквы\",\r\n    },\r\n    {\r\n      rule: \"maxLength\",\r\n      value: 30,\r\n      errorMessage: \"Имя слишком длинное!\",\r\n    },\r\n    {\r\n      rule: \"required\",\r\n      value: true,\r\n      errorMessage: \"Введите имя!\",\r\n    },\r\n  ])\r\n  .addField(\"#telephone\", [\r\n    {\r\n      rule: \"required\",\r\n      value: true,\r\n      errorMessage: \"Введите телефон!\",\r\n    },\r\n    {\r\n      rule: \"function\",\r\n      validator: function () {\r\n        const phone = telSelector.inputmask.unmaskedvalue();\r\n        return phone.length === 8;\r\n      },\r\n      errorMessage: \"Введите корректный номер телефона!\",\r\n    },\r\n  ])\r\n  .onSuccess((e) => {\r\n    // сама форма обраюотки\r\n\r\n    const sendForm = (data) => {\r\n      return fetch(\"send.php\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n          // \"Access-Control-Allow-Origin\": \"*\",\r\n          // \"Access-Control-Allow-Credentials\": true,\r\n        },\r\n      }).then((res) => res.json());\r\n    };\r\n\r\n    // form.addEventListener(\"submit\", (e) => {\r\n    //   e.preventDefault();\r\n\r\n    const dataForm = new FormData(e.target);\r\n    const user = {};\r\n\r\n    dataForm.forEach((val, key) => {\r\n      user[key] = val;\r\n      // console.log((user[key] = val));\r\n    });\r\n\r\n    sendForm(user).then((data) => {\r\n      // console.log(\"Успешно!\");\r\n      // modal.classList.add(\"active\");\r\n      // time();\r\n    });\r\n\r\n    e.target.reset();\r\n\r\n    function time() {\r\n      document.querySelector('div[class=\"modal\"]').classList.add(\"active\");\r\n      document.body.classList.add(\"_lock\");\r\n    }\r\n    setTimeout(time, 500);\r\n\r\n    // });\r\n    // конец формы\r\n  });\r\n\r\n//*----\r\n","// // Dynamic Adapt v.1\r\n// // HTML data-da=\"where(uniq class name),when(breakpoint),position(digi)\"\r\n// // e.x. data-da=\".item,992,2\"\r\n// // Andrikanych Yevhen 2020\r\n// // https://www.youtube.com/c/freelancerlifestyle\r\n\r\n// \"use strict\";\r\n\r\n// function DynamicAdapt(type) {\r\n//   this.type = type;\r\n// }\r\n\r\n// DynamicAdapt.prototype.init = function () {\r\n//   const _this = this;\r\n//   // массив объектов\r\n//   this.оbjects = [];\r\n//   this.daClassname = \"_dynamic_adapt_\";\r\n//   // массив DOM-элементов\r\n//   this.nodes = document.querySelectorAll(\"[data-da]\");\r\n\r\n//   // наполнение оbjects объктами\r\n//   for (let i = 0; i < this.nodes.length; i++) {\r\n//     const node = this.nodes[i];\r\n//     const data = node.dataset.da.trim();\r\n//     const dataArray = data.split(\",\");\r\n//     const оbject = {};\r\n//     оbject.element = node;\r\n//     оbject.parent = node.parentNode;\r\n//     оbject.destination = document.querySelector(dataArray[0].trim());\r\n//     оbject.breakpoint = dataArray[1] ? dataArray[1].trim() : \"767\";\r\n//     оbject.place = dataArray[2] ? dataArray[2].trim() : \"last\";\r\n//     оbject.index = this.indexInParent(оbject.parent, оbject.element);\r\n//     this.оbjects.push(оbject);\r\n//   }\r\n\r\n//   this.arraySort(this.оbjects);\r\n\r\n//   // массив уникальных медиа-запросов\r\n//   this.mediaQueries = Array.prototype.map.call(\r\n//     this.оbjects,\r\n//     function (item) {\r\n//       return (\r\n//         \"(\" +\r\n//         this.type +\r\n//         \"-width: \" +\r\n//         item.breakpoint +\r\n//         \"px),\" +\r\n//         item.breakpoint\r\n//       );\r\n//     },\r\n//     this\r\n//   );\r\n//   this.mediaQueries = Array.prototype.filter.call(\r\n//     this.mediaQueries,\r\n//     function (item, index, self) {\r\n//       return Array.prototype.indexOf.call(self, item) === index;\r\n//     }\r\n//   );\r\n\r\n//   // навешивание слушателя на медиа-запрос\r\n//   // и вызов обработчика при первом запуске\r\n//   for (let i = 0; i < this.mediaQueries.length; i++) {\r\n//     const media = this.mediaQueries[i];\r\n//     const mediaSplit = String.prototype.split.call(media, \",\");\r\n//     const matchMedia = window.matchMedia(mediaSplit[0]);\r\n//     const mediaBreakpoint = mediaSplit[1];\r\n\r\n//     // массив объектов с подходящим брейкпоинтом\r\n//     const оbjectsFilter = Array.prototype.filter.call(\r\n//       this.оbjects,\r\n//       function (item) {\r\n//         return item.breakpoint === mediaBreakpoint;\r\n//       }\r\n//     );\r\n//     matchMedia.addListener(function () {\r\n//       _this.mediaHandler(matchMedia, оbjectsFilter);\r\n//     });\r\n//     this.mediaHandler(matchMedia, оbjectsFilter);\r\n//   }\r\n// };\r\n\r\n// DynamicAdapt.prototype.mediaHandler = function (matchMedia, оbjects) {\r\n//   if (matchMedia.matches) {\r\n//     for (let i = 0; i < оbjects.length; i++) {\r\n//       const оbject = оbjects[i];\r\n//       оbject.index = this.indexInParent(оbject.parent, оbject.element);\r\n//       this.moveTo(оbject.place, оbject.element, оbject.destination);\r\n//     }\r\n//   } else {\r\n//     for (let i = 0; i < оbjects.length; i++) {\r\n//       const оbject = оbjects[i];\r\n//       if (оbject.element.classList.contains(this.daClassname)) {\r\n//         this.moveBack(оbject.parent, оbject.element, оbject.index);\r\n//       }\r\n//     }\r\n//   }\r\n// };\r\n\r\n// // Функция перемещения\r\n// DynamicAdapt.prototype.moveTo = function (place, element, destination) {\r\n//   element.classList.add(this.daClassname);\r\n//   if (place === \"last\" || place >= destination.children.length) {\r\n//     destination.insertAdjacentElement(\"beforeend\", element);\r\n//     return;\r\n//   }\r\n//   if (place === \"first\") {\r\n//     destination.insertAdjacentElement(\"afterbegin\", element);\r\n//     return;\r\n//   }\r\n//   destination.children[place].insertAdjacentElement(\"beforebegin\", element);\r\n// };\r\n\r\n// // Функция возврата\r\n// DynamicAdapt.prototype.moveBack = function (parent, element, index) {\r\n//   element.classList.remove(this.daClassname);\r\n//   if (parent.children[index] !== undefined) {\r\n//     parent.children[index].insertAdjacentElement(\"beforebegin\", element);\r\n//   } else {\r\n//     parent.insertAdjacentElement(\"beforeend\", element);\r\n//   }\r\n// };\r\n\r\n// // Функция получения индекса внутри родителя\r\n// DynamicAdapt.prototype.indexInParent = function (parent, element) {\r\n//   const array = Array.prototype.slice.call(parent.children);\r\n//   return Array.prototype.indexOf.call(array, element);\r\n// };\r\n\r\n// // Функция сортировки массива по breakpoint и place\r\n// // по возрастанию для this.type = min\r\n// // по убыванию для this.type = max\r\n// DynamicAdapt.prototype.arraySort = function (arr) {\r\n//   if (this.type === \"min\") {\r\n//     Array.prototype.sort.call(arr, function (a, b) {\r\n//       if (a.breakpoint === b.breakpoint) {\r\n//         if (a.place === b.place) {\r\n//           return 0;\r\n//         }\r\n\r\n//         if (a.place === \"first\" || b.place === \"last\") {\r\n//           return -1;\r\n//         }\r\n\r\n//         if (a.place === \"last\" || b.place === \"first\") {\r\n//           return 1;\r\n//         }\r\n\r\n//         return a.place - b.place;\r\n//       }\r\n\r\n//       return a.breakpoint - b.breakpoint;\r\n//     });\r\n//   } else {\r\n//     Array.prototype.sort.call(arr, function (a, b) {\r\n//       if (a.breakpoint === b.breakpoint) {\r\n//         if (a.place === b.place) {\r\n//           return 0;\r\n//         }\r\n\r\n//         if (a.place === \"first\" || b.place === \"last\") {\r\n//           return 1;\r\n//         }\r\n\r\n//         if (a.place === \"last\" || b.place === \"first\") {\r\n//           return -1;\r\n//         }\r\n\r\n//         return b.place - a.place;\r\n//       }\r\n\r\n//       return b.breakpoint - a.breakpoint;\r\n//     });\r\n//     return;\r\n//   }\r\n// };\r\n\r\n// const da = new DynamicAdapt(\"max\");\r\n// da.init();\r\n","// // мобильное меню\r\n\r\n// //выпадающее меню для мобильных устройств\r\n// document.addEventListener(\"click\", documentActions);\r\n\r\n// function documentActions(e) {\r\n//   const targetElement = e.target;\r\n//   if (window.innerWidth > 900) {\r\n//     if (targetElement.classList.contains(\"menu__arrow\")) {\r\n//       targetElement.closest(\".menu__item\").classList.toggle(\"_hover\");\r\n//     }\r\n//     if (\r\n//       !targetElement.closest(\".menu__item\") &&\r\n//       document.querySelectorAll(\".menu__item._hover\").length > 0\r\n//     ) {\r\n//       // console.log(\"ehhh\");\r\n//       // _removeClasses(document.querySelectorAll(\".menu__item._hover\"), \"_hover\");\r\n//     }\r\n//   }\r\n// }\r\n\r\n// // проверка, является ли уствройство мобильным\r\n// const isMobile = {\r\n//   Android: function () {\r\n//     return navigator.userAgent.match(/Android/i);\r\n//   },\r\n//   BlackBerry: function () {\r\n//     return navigator.userAgent.match(/BlackBerry/i);\r\n//   },\r\n//   iOS: function () {\r\n//     return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n//   },\r\n//   Opera: function () {\r\n//     return navigator.userAgent.match(/Opera Mini/i);\r\n//   },\r\n//   Windows: function () {\r\n//     return navigator.userAgent.match(/IEMobile/i);\r\n//   },\r\n//   any: function () {\r\n//     return (\r\n//       isMobile.Android() ||\r\n//       isMobile.BlackBerry() ||\r\n//       isMobile.iOS() ||\r\n//       isMobile.Opera() ||\r\n//       isMobile.Windows()\r\n//     );\r\n//   },\r\n// };\r\n\r\n// if (isMobile.any()) {\r\n//   // document.querySelector('html').classList.add('_touch');\r\n//   document.body.classList.add(\"_touch\");\r\n// }\r\n\r\n// // меню бургер\r\n// const iconMenu = document.querySelector(\".menu__icon\");\r\n// const menuBody = document.querySelector(\".menu__body\");\r\n// const menuLink = document.querySelector(\".menu__item\");\r\n// if (iconMenu) {\r\n//   iconMenu.addEventListener(\"click\", function (e) {\r\n//     document.body.classList.toggle(\"_lock\");\r\n//     iconMenu.classList.toggle(\"_active\");\r\n//     menuBody.classList.toggle(\"_active\");\r\n//   });\r\n// }\r\n// // закрытие при клике\r\n// menuLink.addEventListener(\"click\", function (e) {\r\n//   console.log(\"yes\");\r\n//   document.body.classList.remove(\"_lock\");\r\n//   iconMenu.classList.remove(\"_active\");\r\n//   menuBody.classList.remove(\"_active\");\r\n// });\r\n","$(window).on(\"load resize\", function () {\n  if ($(window).width() < 768) {\n    $(\"#cut\").insertAfter(\"#insert\");\n  }\n});\n"]}