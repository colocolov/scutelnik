{"version":3,"sources":["accordeon.js","form.js","nav-dinam-adap.js","nav.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChlLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.min.js","sourcesContent":["// accordeon\nconst servicesBtn = document.querySelector(\".services__btn\");\nconst servicesAll = document.querySelector(\".services__all\");\nconst works = document.querySelector(\".works\");\n// const menuLink = document.querySelector(\".menu__item\");\nif (servicesBtn) {\n  servicesBtn.addEventListener(\"click\", function (e) {\n    // document.body.classList.toggle(\"_lock\");\n    servicesBtn.classList.toggle(\"active\");\n    servicesAll.classList.toggle(\"active\");\n    works.classList.toggle(\"active\");\n\n    // смена текста на кнопке \"Все услуги\" при клике\n    if (servicesBtn.classList.contains(\"active\")) {\n      // console.log(\"yes\");\n      servicesBtn.textContent = \"Закрыть\";\n    } else {\n      servicesBtn.textContent = \"Все услуги\";\n    }\n  });\n}\n","// форма отправки оповещения в телеграм\nconst form = document.querySelector(\".footer__form\");\n\nconst telSelector = form.querySelector('input[type=\"tel\"]');\nconst inputMask = new Inputmask(\"+373 (99) 999-999\");\ninputMask.mask(telSelector);\n\n// const validation = new JustValidate(\"#fform\");\nconst validation = new JustValidate(\"#fform\");\n\nvalidation\n  .addField(\"#name\", [\n    {\n      rule: \"minLength\",\n      value: 3,\n      errorMessage: \"Минимальная длина имени: 3 буквы\",\n    },\n    {\n      rule: \"maxLength\",\n      value: 30,\n      errorMessage: \"Имя слишком длинное!\",\n    },\n    {\n      rule: \"required\",\n      value: true,\n      errorMessage: \"Введите имя!\",\n    },\n  ])\n  .addField(\"#telephone\", [\n    {\n      rule: \"required\",\n      value: true,\n      errorMessage: \"Введите телефон!\",\n    },\n    {\n      rule: \"function\",\n      validator: function () {\n        const phone = telSelector.inputmask.unmaskedvalue();\n        return phone.length === 8;\n      },\n      errorMessage: \"Введите корректный номер телефона!\",\n    },\n  ])\n  .onSuccess((e) => {\n    // сама форма обраюотки\n\n    const sendForm = (data) => {\n      return fetch(\"send.php\", {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n          // \"Access-Control-Allow-Origin\": \"*\",\n          // \"Access-Control-Allow-Credentials\": true,\n        },\n      }).then((res) => res.json());\n    };\n\n    // form.addEventListener(\"submit\", (e) => {\n    //   e.preventDefault();\n\n    const dataForm = new FormData(e.target);\n    const user = {};\n\n    dataForm.forEach((val, key) => {\n      user[key] = val;\n      // console.log((user[key] = val));\n    });\n\n    sendForm(user).then((data) => {\n      // console.log(\"Успешно!\");\n    });\n\n    e.target.reset();\n\n    // });\n    // конец формы\n  });\n\n//*----\n","// // Dynamic Adapt v.1\n// // HTML data-da=\"where(uniq class name),when(breakpoint),position(digi)\"\n// // e.x. data-da=\".item,992,2\"\n// // Andrikanych Yevhen 2020\n// // https://www.youtube.com/c/freelancerlifestyle\n\n// \"use strict\";\n\n// function DynamicAdapt(type) {\n//   this.type = type;\n// }\n\n// DynamicAdapt.prototype.init = function () {\n//   const _this = this;\n//   // массив объектов\n//   this.оbjects = [];\n//   this.daClassname = \"_dynamic_adapt_\";\n//   // массив DOM-элементов\n//   this.nodes = document.querySelectorAll(\"[data-da]\");\n\n//   // наполнение оbjects объктами\n//   for (let i = 0; i < this.nodes.length; i++) {\n//     const node = this.nodes[i];\n//     const data = node.dataset.da.trim();\n//     const dataArray = data.split(\",\");\n//     const оbject = {};\n//     оbject.element = node;\n//     оbject.parent = node.parentNode;\n//     оbject.destination = document.querySelector(dataArray[0].trim());\n//     оbject.breakpoint = dataArray[1] ? dataArray[1].trim() : \"767\";\n//     оbject.place = dataArray[2] ? dataArray[2].trim() : \"last\";\n//     оbject.index = this.indexInParent(оbject.parent, оbject.element);\n//     this.оbjects.push(оbject);\n//   }\n\n//   this.arraySort(this.оbjects);\n\n//   // массив уникальных медиа-запросов\n//   this.mediaQueries = Array.prototype.map.call(\n//     this.оbjects,\n//     function (item) {\n//       return (\n//         \"(\" +\n//         this.type +\n//         \"-width: \" +\n//         item.breakpoint +\n//         \"px),\" +\n//         item.breakpoint\n//       );\n//     },\n//     this\n//   );\n//   this.mediaQueries = Array.prototype.filter.call(\n//     this.mediaQueries,\n//     function (item, index, self) {\n//       return Array.prototype.indexOf.call(self, item) === index;\n//     }\n//   );\n\n//   // навешивание слушателя на медиа-запрос\n//   // и вызов обработчика при первом запуске\n//   for (let i = 0; i < this.mediaQueries.length; i++) {\n//     const media = this.mediaQueries[i];\n//     const mediaSplit = String.prototype.split.call(media, \",\");\n//     const matchMedia = window.matchMedia(mediaSplit[0]);\n//     const mediaBreakpoint = mediaSplit[1];\n\n//     // массив объектов с подходящим брейкпоинтом\n//     const оbjectsFilter = Array.prototype.filter.call(\n//       this.оbjects,\n//       function (item) {\n//         return item.breakpoint === mediaBreakpoint;\n//       }\n//     );\n//     matchMedia.addListener(function () {\n//       _this.mediaHandler(matchMedia, оbjectsFilter);\n//     });\n//     this.mediaHandler(matchMedia, оbjectsFilter);\n//   }\n// };\n\n// DynamicAdapt.prototype.mediaHandler = function (matchMedia, оbjects) {\n//   if (matchMedia.matches) {\n//     for (let i = 0; i < оbjects.length; i++) {\n//       const оbject = оbjects[i];\n//       оbject.index = this.indexInParent(оbject.parent, оbject.element);\n//       this.moveTo(оbject.place, оbject.element, оbject.destination);\n//     }\n//   } else {\n//     for (let i = 0; i < оbjects.length; i++) {\n//       const оbject = оbjects[i];\n//       if (оbject.element.classList.contains(this.daClassname)) {\n//         this.moveBack(оbject.parent, оbject.element, оbject.index);\n//       }\n//     }\n//   }\n// };\n\n// // Функция перемещения\n// DynamicAdapt.prototype.moveTo = function (place, element, destination) {\n//   element.classList.add(this.daClassname);\n//   if (place === \"last\" || place >= destination.children.length) {\n//     destination.insertAdjacentElement(\"beforeend\", element);\n//     return;\n//   }\n//   if (place === \"first\") {\n//     destination.insertAdjacentElement(\"afterbegin\", element);\n//     return;\n//   }\n//   destination.children[place].insertAdjacentElement(\"beforebegin\", element);\n// };\n\n// // Функция возврата\n// DynamicAdapt.prototype.moveBack = function (parent, element, index) {\n//   element.classList.remove(this.daClassname);\n//   if (parent.children[index] !== undefined) {\n//     parent.children[index].insertAdjacentElement(\"beforebegin\", element);\n//   } else {\n//     parent.insertAdjacentElement(\"beforeend\", element);\n//   }\n// };\n\n// // Функция получения индекса внутри родителя\n// DynamicAdapt.prototype.indexInParent = function (parent, element) {\n//   const array = Array.prototype.slice.call(parent.children);\n//   return Array.prototype.indexOf.call(array, element);\n// };\n\n// // Функция сортировки массива по breakpoint и place\n// // по возрастанию для this.type = min\n// // по убыванию для this.type = max\n// DynamicAdapt.prototype.arraySort = function (arr) {\n//   if (this.type === \"min\") {\n//     Array.prototype.sort.call(arr, function (a, b) {\n//       if (a.breakpoint === b.breakpoint) {\n//         if (a.place === b.place) {\n//           return 0;\n//         }\n\n//         if (a.place === \"first\" || b.place === \"last\") {\n//           return -1;\n//         }\n\n//         if (a.place === \"last\" || b.place === \"first\") {\n//           return 1;\n//         }\n\n//         return a.place - b.place;\n//       }\n\n//       return a.breakpoint - b.breakpoint;\n//     });\n//   } else {\n//     Array.prototype.sort.call(arr, function (a, b) {\n//       if (a.breakpoint === b.breakpoint) {\n//         if (a.place === b.place) {\n//           return 0;\n//         }\n\n//         if (a.place === \"first\" || b.place === \"last\") {\n//           return 1;\n//         }\n\n//         if (a.place === \"last\" || b.place === \"first\") {\n//           return -1;\n//         }\n\n//         return b.place - a.place;\n//       }\n\n//       return b.breakpoint - a.breakpoint;\n//     });\n//     return;\n//   }\n// };\n\n// const da = new DynamicAdapt(\"max\");\n// da.init();\n","// // мобильное меню\n\n// //выпадающее меню для мобильных устройств\n// document.addEventListener(\"click\", documentActions);\n\n// function documentActions(e) {\n//   const targetElement = e.target;\n//   if (window.innerWidth > 900) {\n//     if (targetElement.classList.contains(\"menu__arrow\")) {\n//       targetElement.closest(\".menu__item\").classList.toggle(\"_hover\");\n//     }\n//     if (\n//       !targetElement.closest(\".menu__item\") &&\n//       document.querySelectorAll(\".menu__item._hover\").length > 0\n//     ) {\n//       // console.log(\"ehhh\");\n//       // _removeClasses(document.querySelectorAll(\".menu__item._hover\"), \"_hover\");\n//     }\n//   }\n// }\n\n// // проверка, является ли уствройство мобильным\n// const isMobile = {\n//   Android: function () {\n//     return navigator.userAgent.match(/Android/i);\n//   },\n//   BlackBerry: function () {\n//     return navigator.userAgent.match(/BlackBerry/i);\n//   },\n//   iOS: function () {\n//     return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n//   },\n//   Opera: function () {\n//     return navigator.userAgent.match(/Opera Mini/i);\n//   },\n//   Windows: function () {\n//     return navigator.userAgent.match(/IEMobile/i);\n//   },\n//   any: function () {\n//     return (\n//       isMobile.Android() ||\n//       isMobile.BlackBerry() ||\n//       isMobile.iOS() ||\n//       isMobile.Opera() ||\n//       isMobile.Windows()\n//     );\n//   },\n// };\n\n// if (isMobile.any()) {\n//   // document.querySelector('html').classList.add('_touch');\n//   document.body.classList.add(\"_touch\");\n// }\n\n// // меню бургер\n// const iconMenu = document.querySelector(\".menu__icon\");\n// const menuBody = document.querySelector(\".menu__body\");\n// const menuLink = document.querySelector(\".menu__item\");\n// if (iconMenu) {\n//   iconMenu.addEventListener(\"click\", function (e) {\n//     document.body.classList.toggle(\"_lock\");\n//     iconMenu.classList.toggle(\"_active\");\n//     menuBody.classList.toggle(\"_active\");\n//   });\n// }\n// // закрытие при клике\n// menuLink.addEventListener(\"click\", function (e) {\n//   console.log(\"yes\");\n//   document.body.classList.remove(\"_lock\");\n//   iconMenu.classList.remove(\"_active\");\n//   menuBody.classList.remove(\"_active\");\n// });\n"]}